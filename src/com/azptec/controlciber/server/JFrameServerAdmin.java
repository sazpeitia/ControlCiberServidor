/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.azptec.controlciber.server;

import com.azptec.controlciber.common.EntidadServidor;
import com.azptec.controlciber.common.EntidadSocket;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sazpeitia
 */
public class JFrameServerAdmin extends javax.swing.JFrame {

   
    private EntidadServidor socketServidor;
    
    
    /**
     * Creates new form JFrameServerAdmin
     */
    public JFrameServerAdmin() {
        
        
        initComponents();
        
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        controlCiberjTable = new javax.swing.JTable();
        salirjButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlCiberjTable.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        controlCiberjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID EQUIPO", "ESTADO", "TIEMPO", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(controlCiberjTable);
        if (controlCiberjTable.getColumnModel().getColumnCount() > 0) {
            controlCiberjTable.getColumnModel().getColumn(0).setResizable(false);
            controlCiberjTable.getColumnModel().getColumn(1).setResizable(false);
            controlCiberjTable.getColumnModel().getColumn(2).setResizable(false);
            controlCiberjTable.getColumnModel().getColumn(3).setResizable(false);
        }

        salirjButton.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        salirjButton.setText("Salir");
        salirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(salirjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(salirjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirjButtonActionPerformed
        
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_salirjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameServerAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameServerAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameServerAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameServerAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameServerAdmin().setVisible(true);
            }
        });
    }
    
     /**
     * @return the socketServidor
     */
    public EntidadServidor getSocketServidor() {
        return socketServidor;
    }

    /**
     * @param socketServidor the socketServidor to set
     */
    public void setSocketServidor(EntidadServidor socketServidor) {
        this.socketServidor = socketServidor;
    }
    
    public void verificarClientes() {
        
        if ( getSocketServidor().getEntidadSocketLista() != null 
                & getSocketServidor().getEntidadSocketLista().size() > 0 ) {
            
            
            
        }
    }
    
    private void deleteAllRows() {

        DefaultTableModel dm = (DefaultTableModel) controlCiberjTable.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void setAllProductsToTable() {

        for (EntidadSocket socketEquipo : socketServidor.getEntidadSocketLista()) {

            addRowProducto(socketEquipo);
        }
    }
    
    private void addRowProducto(EntidadSocket socketEquipo) {

        DefaultTableModel modelo = (DefaultTableModel) controlCiberjTable.getModel();
        modelo.addRow(new Object[]{
            socketEquipo.getIdEntidad(),
            
        }
        );
    }
    
    public String estatusCliente( EntidadSocket estado ){
        
        if ( estado.isBrockenPipe() ) {
            
            return "CONEXION FALLIDA";
        }
        
        if ( estado.isConectado() ) {
            
            return "BLOQUEADO";
        }
        
        if ( !estado.isConectado() ) {
            
            return "EN USO";
        }
        
        return "ESTATUS DESCONOCIDO";
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable controlCiberjTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton salirjButton;
    // End of variables declaration//GEN-END:variables
}
